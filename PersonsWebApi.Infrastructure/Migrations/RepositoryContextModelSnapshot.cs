// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonsWebApi.Infrastructure.Data;

#nullable disable

namespace PersonsWebApi.Infrastructure.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PersonsWebApi.Domain.Entities.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"), 1L, 1);

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CityId");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            CityId = 1,
                            CityName = "Tbilisi"
                        },
                        new
                        {
                            CityId = 2,
                            CityName = "Batumi"
                        },
                        new
                        {
                            CityId = 3,
                            CityName = "Kutaisi"
                        },
                        new
                        {
                            CityId = 4,
                            CityName = "Samtredia"
                        },
                        new
                        {
                            CityId = 5,
                            CityName = "Mestia"
                        },
                        new
                        {
                            CityId = 6,
                            CityName = "Khoni"
                        },
                        new
                        {
                            CityId = 7,
                            CityName = "Zugdidi"
                        },
                        new
                        {
                            CityId = 8,
                            CityName = "Telavi"
                        });
                });

            modelBuilder.Entity("PersonsWebApi.Domain.Entities.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"), 1L, 1);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CityRefId")
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PersonalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PersonId");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            BirthDate = new DateTime(2000, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CityRefId = 1,
                            Gender = 0,
                            Name = "Lasha",
                            PersonalNumber = "01027073355",
                            PhotoPath = "Lasha.jpg",
                            Surname = "Sulukhia"
                        });
                });

            modelBuilder.Entity("PersonsWebApi.Domain.Entities.PersonsRelation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("From_PersonRefId")
                        .HasColumnType("int");

                    b.Property<int>("Relation")
                        .HasColumnType("int");

                    b.Property<int?>("To_PersonRefIdPersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("To_PersonRefIdPersonId");

                    b.ToTable("PersonsRelation");
                });

            modelBuilder.Entity("PersonsWebApi.Domain.Entities.Phone", b =>
                {
                    b.Property<int>("PhoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhoneId"), 1L, 1);

                    b.Property<int>("PersonRefId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PhoneType")
                        .HasColumnType("int");

                    b.HasKey("PhoneId");

                    b.ToTable("Phone");
                });

            modelBuilder.Entity("PersonsWebApi.Domain.Entities.PersonsRelation", b =>
                {
                    b.HasOne("PersonsWebApi.Domain.Entities.Person", "To_PersonRefId")
                        .WithMany()
                        .HasForeignKey("To_PersonRefIdPersonId");

                    b.Navigation("To_PersonRefId");
                });
#pragma warning restore 612, 618
        }
    }
}
